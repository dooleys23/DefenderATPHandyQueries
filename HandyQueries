# Find and project USB drive mounts
DeviceEvents
| where ActionType == "UsbDriveMounted"
| extend LoggedOnUsers_=parse_json(AdditionalFields)['LoggedOnUsers'][0]
| extend Volume_=parse_json(AdditionalFields)['Volume']
| extend DriveLetter_=parse_json(AdditionalFields)['DriveLetter']
| extend ProductName_=parse_json(AdditionalFields)['ProductName']
| extend ProductRevision_=parse_json(AdditionalFields)['ProductRevision']
| extend SerialNumber_=parse_json(AdditionalFields)['SerialNumber']
| extend Manufacturer_=parse_json(AdditionalFields)['Manufacturer']
| project Timestamp, ActionType, DeviceName, LoggedOnUsers_, Volume_, DriveLetter_, ProductName_, ProductRevision_, SerialNumber_, Manufacturer_

# Get timestamp of most recent DeviceProcessEvent as a check-health
DeviceProcessEvents
| summarize arg_max(Timestamp, *) by DeviceName
| project Timestamp, DeviceName

# Get timestamp of most recent DeviceNetworkEvent as a network-health check
DeviceNetworkEvents
| summarize arg_max(Timestamp, *) by DeviceName
| project Timestamp, DeviceName




// Get all security assessment metrics from defenders TVM modules
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner DeviceTvmSecureConfigurationAssessmentKB on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName
| extend TotalCount = CompliantCount + NotCompliantCount
| extend CompliantPercentage = round(100.0 * CompliantCount / TotalCount, 2)
| project ConfigurationId, ConfigurationName, CompliantCount, NotCompliantCount, CompliantPercentage
| sort by ConfigurationId

// Get all security assessment metrics from defenders TVM modules with Configuration Impact level
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner DeviceTvmSecureConfigurationAssessmentKB on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact
| extend TotalCount = CompliantCount + NotCompliantCount
| extend CompliantPercentage = round(100.0 * CompliantCount / TotalCount, 2)
| project ConfigurationId, ConfigurationImpact, CompliantCount, NotCompliantCount, CompliantPercentage, ConfigurationName
| sort by ConfigurationImpact desc , CompliantPercentage desc


// Get all security assessment metrics from defenders TVM modules with Configuration Impact level
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner DeviceTvmSecureConfigurationAssessmentKB on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact, OSPlatform
| extend TotalCount = CompliantCount + NotCompliantCount
| extend CompliantPercentage = round(100.0 * CompliantCount / TotalCount, 2)
| project ConfigurationId, ConfigurationImpact, CompliantCount, NotCompliantCount, CompliantPercentage, ConfigurationName, OSPlatform
| sort by ConfigurationImpact desc , CompliantPercentage desc





// Get all security assessment metrics from defenders TVM modules with Configuration Impact level
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner DeviceTvmSecureConfigurationAssessmentKB on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| where ConfigurationId == 'scid-2030'
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact
| extend TotalCount = CompliantCount + NotCompliantCount
| project ConfigurationId, ConfigurationName, ConfigurationImpact, Compliant = CompliantCount, NotCompliant = NotCompliantCount
| mvexpand Compliant, NotCompliant
| summarize Count = sum(iff(IsCompliant == 'Compliant', Compliant, NotCompliant)) by IsCompliant
| project IsCompliant, Count






// Get all security assessment metrics from defenders TVM modules with Configuration Impact level
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner DeviceTvmSecureConfigurationAssessmentKB on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| where ConfigurationId == 'scid-2030'
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact
| extend TotalCount = CompliantCount + NotCompliantCount
| project CompliantCount, NotCompliantCount
| extend CompliantLabel = 'Compliant', NotCompliantLabel = 'NotCompliant'
| union (project CompliantLabel as Label, CompliantCount as Count), (project NotCompliantLabel as Label, NotCompliantCount as Count)




let configurationIdWhitelist = dynamic(['scid-2070','scid-5007','scid-2072','scid-2071','scid-2073']);
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner DeviceTvmSecureConfigurationAssessmentKB on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact
| extend TotalCount = CompliantCount + NotCompliantCount
| where ConfigurationId in (configurationIdWhitelist)
| project ConfigurationId, ConfigurationImpact, CompliantCount, NotCompliantCount, ConfigurationName
| sort by ConfigurationImpact desc






let configurationIdWhitelist = dynamic(['scid-2070','scid-5007','scid-2072','scid-2071','scid-2073']);
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner (DeviceTvmSecureConfigurationAssessmentKB) on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact
| extend TotalCount = CompliantCount + NotCompliantCount
| where ConfigurationId in (configurationIdWhitelist)
| summarize TotalCompliant = sum(CompliantCount), TotalDevices = sum(TotalCount)
| extend CompliancePercentage = todouble(TotalCompliant) / todouble(TotalDevices) * 100
| project CompliancePercentage













let configurationIdWhitelist = dynamic(['scid-2070','scid-5007','scid-2072','scid-2071','scid-2073']);
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner (DeviceTvmSecureConfigurationAssessmentKB) on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact
| extend TotalCount = CompliantCount + NotCompliantCount
| where ConfigurationId in (configurationIdWhitelist)
| summarize TotalCompliant = sum(CompliantCount), TotalDevices = sum(TotalCount)
| extend CompliancePercentage = todouble(TotalCompliant) / todouble(TotalDevices) * 100
| project CompliancePercentage, NonCompliancePercentage = 100 - CompliancePercentage
| extend Label = 'Compliance Status'
| project Label, CompliancePercentage, NonCompliancePercentage
| mvexpand CompliancePercentage, NonCompliancePercentage
| project Status = iff(CompliancePercentage != 0, 'Compliant', 'Non-Compliant'), Value = iff(CompliancePercentage != 0, CompliancePercentage, NonCompliancePercentage)
| render barchart





let configurationIdWhitelist = dynamic(['scid-2070','scid-5007','scid-2072','scid-2071','scid-2073']);
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner (DeviceTvmSecureConfigurationAssessmentKB) on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact
| extend TotalCount = CompliantCount + NotCompliantCount
| where ConfigurationId in (configurationIdWhitelist)
| summarize TotalCompliant = sum(CompliantCount), TotalDevices = sum(TotalCount)
| extend CompliancePercentage = todouble(TotalCompliant) / todouble(TotalDevices) * 100
| project CompliancePercentage, NonCompliancePercentage = 100 - CompliancePercentage
| extend Label = 'Compliance Status'
| project Label, CompliancePercentage, NonCompliancePercentage
| mvexpand CompliancePercentage, NonCompliancePercentage
| project Status = iff(CompliancePercentage != 0, 'Compliant', 'Non-Compliant'), Value = iff(CompliancePercentage != 0, CompliancePercentage, NonCompliancePercentage)
| render piechart




let configurationIdWhitelist = dynamic(['scid-2070','scid-5007','scid-2072','scid-2071','scid-2073']);
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner (DeviceTvmSecureConfigurationAssessmentKB) on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact
| extend TotalCount = CompliantCount + NotCompliantCount
| where ConfigurationId in (configurationIdWhitelist)
| summarize TotalCompliant = sum(CompliantCount), TotalDevices = sum(TotalCount)
| extend CompliancePercentage = todouble(TotalCompliant) / todouble(TotalDevices) * 100
| extend NonCompliancePercentage = 100 - CompliancePercentage
| project Status = dynamic(['Compliant', 'Non-Compliant']), Values = dynamic([CompliancePercentage, NonCompliancePercentage])
| mvexpand Status, Values
| project Status, Values
| render barchart




Syntax error
Error message
Expected: ]
How to resolve
Fix syntax errors in your query
Token
CompliancePercentage
Line
16
Position
79







let configurationIdWhitelist = dynamic(['scid-2070','scid-5007','scid-2072','scid-2071','scid-2073']);
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner (DeviceTvmSecureConfigurationAssessmentKB) on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact
| extend TotalCount = CompliantCount + NotCompliantCount
| where ConfigurationId in (configurationIdWhitelist)
| summarize TotalCompliant = sum(CompliantCount), TotalDevices = sum(TotalCount)
| extend CompliancePercentage = todouble(TotalCompliant) / todouble(TotalDevices) * 100
| extend NonCompliancePercentage = 100 - CompliancePercentage
| project Status = dynamic(['Compliant', 'Non-Compliant']), Values = dynamic([CompliancePercentage, NonCompliancePercentage])
| mvexpand Status to typeof(string), Values to typeof(double)
| project Status, Values
| render barchart



let configurationIdWhitelist = dynamic(['scid-2070','scid-5007','scid-2072','scid-2071','scid-2073']);
DeviceTvmSecureConfigurationAssessment
| where Timestamp > ago(30d)
| where IsApplicable == 1
| join kind=inner (DeviceTvmSecureConfigurationAssessmentKB) on ConfigurationId
| extend IsCompliant = iff(IsCompliant == 1, 'Compliant', 'NotCompliant')
| where ConfigurationImpact >= 8
| summarize arg_max(Timestamp, *) by DeviceName, ConfigurationId, ConfigurationImpact
| summarize CompliantCount = countif(IsCompliant == 'Compliant'), NotCompliantCount = countif(IsCompliant == 'NotCompliant') by ConfigurationId, ConfigurationName, ConfigurationImpact
| extend TotalCount = CompliantCount + NotCompliantCount
| where ConfigurationId in (configurationIdWhitelist)
| summarize TotalCompliant = sum(CompliantCount), TotalDevices = sum(TotalCount)
| extend CompliancePercentage = todouble(TotalCompliant) / todouble(TotalDevices) * 100
| extend NonCompliancePercentage = 100 - CompliancePercentage
| union (
    project Status = "Compliant", Value = CompliancePercentage
), (
    project Status = "Non-Compliant", Value = NonCompliancePercentage
)
| render barchart





let totalHosts = 2000;
let onboardedHosts = (DeviceInfo
    | where TimeGenerated > ago(30d)
    | where OnboardingStatus == 'Onboarded'
    | distinct DeviceId
);
let DeviceFileEvents_ = (DeviceFileEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceFileEvents');
let DeviceFileCertificateInfo_ = (DeviceFileCertificateInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceFileCertificateInfo');
let DeviceImageLoadEvents_ = (DeviceImageLoadEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceImageLoadEvents');
let DeviceInfo_ = (DeviceInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceInfo');
let DeviceLogonEvents_ = (DeviceLogonEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceLogonEvents');
let DeviceNetworkEvents_ = (DeviceNetworkEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceNetworkEvents');
let DeviceNetworkInfo_ = (DeviceNetworkInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceNetworkInfo');
let DeviceProcessEvents_ = (DeviceProcessEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceProcessEvents');
let DeviceRegistryEvents_ = (DeviceRegistryEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceRegistryEvents');
DeviceEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceEvents'
| union DeviceFileEvents_, DeviceFileCertificateInfo_, DeviceImageLoadEvents_, DeviceInfo_, DeviceLogonEvents_, DeviceNetworkEvents_, DeviceNetworkInfo_, DeviceProcessEvents_, DeviceRegistryEvents_
| extend ARKATotalHosts = totalHosts
| project Table, ARKADevicesBeingLogged, ARKATotalHosts
// | extend compliancePercentage = todouble(ARKADevicesBeingLogged)/todouble(totalHosts)*100
// | project Table, ARKADevicesBeingLogged, ARKATotalHosts, compliancePercentage
// | project Table, ARKADevicesBeingLogged
// | extend compliancePercentage = todouble(ARKADevicesBeingLogged)/todouble(totaldevices)*100









let totalHosts = 2000;
let onboardedHosts = (DeviceInfo
  | where TimeGenerated > ago(30d)
  | where OnboardingStatus == 'Onboarded'
  | distinct DeviceId
);
let DeviceFileEvents_ = (DeviceFileEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceFileEvents');
let DeviceFileCertificateInfo_ = (DeviceFileCertificateInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceFileCertificateInfo');
let DeviceImageLoadEvents_ = (DeviceImageLoadEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceImageLoadEvents');
let DeviceInfo_ = (DeviceInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceInfo');
let DeviceLogonEvents_ = (DeviceLogonEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceLogonEvents');
let DeviceNetworkEvents_ = (DeviceNetworkEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceNetworkEvents');
let DeviceNetworkInfo_ = (DeviceNetworkInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceNetworkInfo');
let DeviceProcessEvents_ = (DeviceProcessEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceProcessEvents');
let DeviceRegistryEvents_ = (DeviceRegistryEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceRegistryEvents');
DeviceEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceEvents'
| union DeviceFileEvents_, DeviceFileCertificateInfo_, DeviceImageLoadEvents_, DeviceInfo_, DeviceLogonEvents_, DeviceNetworkEvents_, DeviceNetworkInfo_, DeviceProcessEvents_, DeviceRegistryEvents_
| extend ARKATotalHosts = totalHosts
| project Table, ARKADevicesBeingLogged, ARKATotalHosts
// | render barchart 
// | render columnchart with (title = "Logged Devices in Last 30 Days", xaxis = Table, yaxis = ARKADevicesBeingLogged) 








let totalHosts = 2000;
let onboardedHosts = (DeviceInfo
  | where TimeGenerated > ago(30d)
  | where OnboardingStatus == 'Onboarded'
  | distinct DeviceId
);
let DeviceFileEvents_ = (DeviceFileEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceFileEvents');
let DeviceFileCertificateInfo_ = (DeviceFileCertificateInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceFileCertificateInfo');
let DeviceImageLoadEvents_ = (DeviceImageLoadEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceImageLoadEvents');
let DeviceInfo_ = (DeviceInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceInfo');
let DeviceLogonEvents_ = (DeviceLogonEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceLogonEvents');
let DeviceNetworkEvents_ = (DeviceNetworkEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceNetworkEvents');
let DeviceNetworkInfo_ = (DeviceNetworkInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceNetworkInfo');
let DeviceProcessEvents_ = (DeviceProcessEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceProcessEvents');
let DeviceRegistryEvents_ = (DeviceRegistryEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceRegistryEvents');
DeviceEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceEvents'
| union DeviceFileEvents_, DeviceFileCertificateInfo_, DeviceImageLoadEvents_, DeviceInfo_, DeviceLogonEvents_, DeviceNetworkEvents_, DeviceNetworkInfo_, DeviceProcessEvents_, DeviceRegistryEvents_
| extend ARKATotalHosts = totalHosts
| project Table, ARKADevicesBeingLogged, ARKATotalHosts
| render barchart with (title = "Logged Devices in Last 30 Days", xaxis = Table, yaxis = ARKADevicesBeingLogged)







let totalHosts = 2000;
let onboardedHosts = (DeviceInfo
  | where TimeGenerated > ago(30d)
  | where OnboardingStatus == 'Onboarded'
  | distinct DeviceId
);
let DeviceFileEvents_ = (DeviceFileEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceFileEvents');
let DeviceFileCertificateInfo_ = (DeviceFileCertificateInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceFileCertificateInfo');
let DeviceImageLoadEvents_ = (DeviceImageLoadEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceImageLoadEvents');
let DeviceInfo_ = (DeviceInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceInfo');
let DeviceLogonEvents_ = (DeviceLogonEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceLogonEvents');
let DeviceNetworkEvents_ = (DeviceNetworkEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceNetworkEvents');
let DeviceNetworkInfo_ = (DeviceNetworkInfo
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceNetworkInfo');
let DeviceProcessEvents_ = (DeviceProcessEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceProcessEvents');
let DeviceRegistryEvents_ = (DeviceRegistryEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceRegistryEvents');
DeviceEvents
| where TimeGenerated > ago(30d)
| where DeviceId in (onboardedHosts)
| summarize ARKADevicesBeingLogged=dcount(DeviceName)
| extend Table='DeviceEvents'
| union DeviceFileEvents_, DeviceFileCertificateInfo_, DeviceImageLoadEvents_, DeviceInfo_, DeviceLogonEvents_, DeviceNetworkEvents_, DeviceNetworkInfo_, DeviceProcessEvents_, DeviceRegistryEvents_
| extend ARKATotalHosts = totalHosts
| project Table, ARKADevicesBeingLogged, ARKATotalHosts
| render columnchart with (title = "Logged Devices in Last 30 Days", xaxis = Table, yaxis = ARKADevicesBeingLogged)
